{"version":3,"sources":["utils/Loader.module.css","api/api.ts","redux/reducer.ts","components/Header.tsx","utils/Loader.jsx","assets/empty.png","components/Img.tsx","components/MovieCard.tsx","components/MoviesList.tsx","components/Pagination.tsx","components/Comments.tsx","components/MovieSuggestions.tsx","components/MovieDetails.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/MovieDetails.module.css"],"names":["module","exports","Api","title","page","fetch","response","json","id","details","movie_suggestions","Promise","all","res1","res2","ok","getMoviesList","createAsyncThunk","a","getMoviesDetails","getMovieDetails","moviesListSlice","createSlice","name","initialState","list","currentPage","totalPages","searchedMovie","isLoading","curretMovieDetails","curretMovieSuggestions","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","data","movies","meta","arg","movie_count","movie","Header","useState","value","setValue","dispatch","useDispatch","buttonHandler","e","preventDefault","className","onChange","target","type","placeholder","onClick","Loader","s","position","lds_ellipsis","Img","preloader","img","isLoaded","setIsLoaded","bg","Image","src","onload","alt","MovieCard","genre","year","rating","fixedGenres","slice","tilteValid","length","map","to","MoviesList","listOfMovies","useSelector","reducer","useEffect","genres","large_cover_image","Pagination","startPage","endPage","Math","ceil","pageItem","Array","keys","i","changePage","Comments","lsList","localStorage","getItem","JSON","parse","commentsList","setCommentsList","currentMovieComments","find","c","comments","text","newComment","floor","random","date","Date","toJSON","replace","newCommentsList","filter","setItem","stringify","setNewComments","comment","commentId","comList","newCurrentCommentList","deleteComment","MovieSuggestions","movieSuggestions","m","medium_cover_image","MovieSuggestionsCard","console","log","useLocation","pathname","split","movieSuggestionsCard","MovieDetails","withRouter","props","movieId","match","params","background_image","date_uploaded","description_full","download_count","runtime","wrapper","style","backgroundImage","container","movieInfo","genresWrapper","synopsis","movieTechData","Main","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23aa69b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"Loader_position__2kpVN\",\"lds_ellipsis\":\"Loader_lds_ellipsis__mYKGY\",\"lds-ellipsis1\":\"Loader_lds-ellipsis1__Yznjw\",\"lds-ellipsis2\":\"Loader_lds-ellipsis2__1xLeC\",\"lds-ellipsis3\":\"Loader_lds-ellipsis3__19TEU\"};","export class Api {\r\n  static async getMoviesList(title: string, page: number = 1) {\r\n    const response = await fetch(\r\n      `https://yts.mx/api/v2/list_movies.json?query_term=${title}&page=${page}`\r\n    );\r\n    return response.json();\r\n  }\r\n\r\n  static async getMovieDetails(id: number) {\r\n    const details = `https://yts.mx/api/v2/movie_details.json?movie_id=${id}`;\r\n    const movie_suggestions = `https://yts.mx/api/v2/movie_suggestions.json?movie_id=${id}`;\r\n    const response = await Promise.all([\r\n      fetch(details),\r\n      fetch(movie_suggestions),\r\n    ]);\r\n\r\n    try {\r\n      const [res1, res2] = response;\r\n      if (res1.ok && res2.ok) {\r\n        return Promise.all([res1.json(), res2.json()]);\r\n      }\r\n      return;\r\n    } catch {\r\n      return;\r\n    }\r\n  }\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { Api } from '../api/api';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  currentPage: 1,\r\n  totalPages: 0,\r\n  searchedMovie: '',\r\n  isLoading: false,\r\n  curretMovieDetails: {},\r\n  curretMovieSuggestions: [],\r\n};\r\n\r\nexport const getMoviesList = createAsyncThunk(\r\n  'movies/getMoviesList',\r\n  async ({ title, page = 1 }: { title: string; page: number }) => {\r\n    const response = await Api.getMoviesList(title, page);\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const getMoviesDetails = createAsyncThunk(\r\n  'movies/getMoviesDetails',\r\n  async (id: number) => {\r\n    const response = await Api.getMovieDetails(id);\r\n    return response;\r\n  }\r\n);\r\n\r\nconst moviesListSlice = createSlice({\r\n  name: 'movies',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getMoviesList.pending, (state, action) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getMoviesList.fulfilled, (state, action) => {\r\n        state.list = action.payload.data.movies;\r\n        state.searchedMovie = action.meta.arg.title;\r\n        state.totalPages = action.payload.data.movie_count;\r\n        state.currentPage = action.meta.arg.page;\r\n        state.isLoading = false;\r\n      })\r\n      .addCase(getMoviesDetails.pending, () => {})\r\n      .addCase(getMoviesDetails.fulfilled, (state, action: any) => {\r\n        const [details, movie_suggestions] = action.payload;\r\n        state.curretMovieDetails = details.data.movie;\r\n        state.curretMovieSuggestions = movie_suggestions.data.movies;\r\n      });\r\n  },\r\n});\r\n\r\nexport default moviesListSlice.reducer;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getMoviesList } from '../redux/reducer';\r\n\r\nexport const Header = () => {\r\n  const [value, setValue] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const onHandleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const buttonHandler = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    await dispatch(getMoviesList({ title: value, page: 1 }));\r\n    setValue('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"webflow-style-input\">\r\n      <input\r\n        onChange={onHandleChange}\r\n        className=\"\"\r\n        type=\"text\"\r\n        placeholder=\"Movie\"\r\n      ></input>\r\n      <button type=\"submit\" onClick={buttonHandler}>\r\n        &rarr;\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import s from './Loader.module.css';\r\n\r\nlet Loader = () => {\r\n  return (\r\n    <div className={s.position}>\r\n      <div className={s.lds_ellipsis}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export default __webpack_public_path__ + \"static/media/empty.817176e3.png\";","import React, { useState } from 'react';\r\n\r\ninterface IProps {\r\n  preloader: string;\r\n  img: string;\r\n}\r\n\r\nconst Img: React.FC<IProps> = ({ preloader, img }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  let bg = new Image();\r\n  bg.src = img;\r\n  bg.onload = () => {\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  return isLoaded ? (\r\n    <img src={img} alt={img}></img>\r\n  ) : (\r\n    <img src={preloader} alt={img}></img>\r\n  );\r\n};\r\n\r\nexport default Img;\r\n","import { Link } from 'react-router-dom';\r\nimport preloader from '../assets/empty.png';\r\nimport { MovieCardType } from '../type';\r\nimport Img from './Img';\r\n\r\nexport const MovieCard: React.FC<MovieCardType> = ({\r\n  genre,\r\n  title,\r\n  year,\r\n  rating,\r\n  bg,\r\n  id,\r\n}) => {\r\n  const fixedGenres = genre?.slice(0, 3);\r\n  const tilteValid = title.length > 20 ? title.slice(0, 16) + '...' : title;\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2 className=\"card-title\">{tilteValid}</h2>\r\n      <Img preloader={preloader} img={bg} />\r\n      <div className=\"card-desc\">\r\n        <h2>{title}</h2>\r\n        Rating - {rating}\r\n        <br />\r\n        {fixedGenres\r\n          ? fixedGenres.map((genre: string) => <div key={genre}>{genre}</div>)\r\n          : ''}\r\n        <br />\r\n        {year}\r\n        <div className=\"card-link\">\r\n          <Link to={`/movie/${id}`}>More</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMoviesList } from '../redux/reducer';\r\nimport { RootReducer } from '../type';\r\nimport Loader from '../utils/Loader';\r\nimport { MovieCard } from './MovieCard';\r\n\r\nexport const MoviesList = () => {\r\n  const listOfMovies = useSelector((state: RootReducer) => state.reducer.list);\r\n  const isLoading = useSelector(\r\n    (state: RootReducer) => state.reducer.isLoading\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getMoviesList({ title: '', page: 1 }));\r\n  }, []);\r\n\r\n  return (\r\n    <div className={'cards-inner'}>\r\n      <div className={'cards'}>\r\n        {isLoading ? <Loader /> : null}\r\n        {listOfMovies\r\n          ? listOfMovies.map((movie: any) => (\r\n              <MovieCard\r\n                key={movie.id}\r\n                genre={movie.genres}\r\n                title={movie.title}\r\n                year={movie.year}\r\n                rating={movie.rating}\r\n                bg={movie.large_cover_image}\r\n                id={movie.id}\r\n              />\r\n            ))\r\n          : 'Empty result'}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getMoviesList } from '../redux/reducer';\r\nimport { RootReducer } from '../type';\r\n\r\nconst Pagination = () => {\r\n  const dispatch = useDispatch();\r\n  const pageSize: number = 20;\r\n  const searchedMovie = useSelector(\r\n    (state: RootReducer) => state.reducer.searchedMovie\r\n  );\r\n  const currentPage = useSelector(\r\n    (state: RootReducer) => state.reducer.currentPage\r\n  );\r\n\r\n  const totalPages = useSelector((state: RootReducer) =>\r\n    Math.ceil(state.reducer.totalPages / pageSize)\r\n  );\r\n\r\n  const changePage = (page: number) => {\r\n    dispatch(getMoviesList({ title: searchedMovie, page }));\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage === 1 || currentPage < 1) return false;\r\n    dispatch(getMoviesList({ title: searchedMovie, page: currentPage - 1 }));\r\n  };\r\n\r\n  const nextPage = () => {\r\n    if (currentPage > totalPages || currentPage === totalPages) return false;\r\n    dispatch(getMoviesList({ title: searchedMovie, page: currentPage + 1 }));\r\n  };\r\n\r\n  const toStartPage = () => {\r\n    dispatch(getMoviesList({ title: searchedMovie, page: 1 }));\r\n  };\r\n\r\n  const toEndPage = () => {\r\n    dispatch(getMoviesList({ title: searchedMovie, page: totalPages }));\r\n  };\r\n\r\n  let startPage: number, endPage: number;\r\n  if (totalPages <= 10) {\r\n    // less than 10 total pages so show all\r\n    startPage = 1;\r\n    endPage = totalPages;\r\n  } else {\r\n    // more than 10 total pages so calculate start and end pages\r\n    if (currentPage <= 6) {\r\n      startPage = 1;\r\n      endPage = 10;\r\n    } else if (currentPage + 4 >= totalPages) {\r\n      startPage = totalPages - 9;\r\n      endPage = totalPages;\r\n    } else {\r\n      startPage = currentPage - 5;\r\n      endPage = currentPage + 4;\r\n    }\r\n  }\r\n\r\n  // create an array of pages to ng-repeat in the pager control\r\n  const pages: number[] = [...Array(endPage + 1 - startPage).keys()].map(\r\n    (i) => startPage + i\r\n  );\r\n\r\n  const pageItem = pages.map((page: number) => {\r\n    return (\r\n      <li key={page}>\r\n        <span\r\n          onClick={() => changePage(page)}\r\n          className={currentPage === page ? 'active' : ''}\r\n        >\r\n          {page}\r\n        </span>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"pagination\">\r\n      <li>\r\n        <span onClick={toStartPage}>To start</span>\r\n      </li>\r\n      <li>\r\n        <span onClick={prevPage}>Prev</span>\r\n      </li>\r\n      {pageItem}\r\n      <li>\r\n        <span onClick={nextPage}>Next</span>\r\n      </li>\r\n      <li>\r\n        <span onClick={toEndPage}>To end</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport { Pagination };\r\n","import { useState } from 'react';\r\n\r\ntype CommentsType = {\r\n  id: number;\r\n};\r\n\r\nexport const Comments: React.FC<CommentsType> = ({ id }) => {\r\n  const lsList: any = localStorage.getItem('comments') || [];\r\n  let list = lsList.length > 0 ? JSON.parse(lsList) : [];\r\n  const [commentsList, setCommentsList] = useState(list);\r\n  const [value, setValue] = useState('');\r\n  const currentMovieComments = commentsList.find((c: any) => c.id == id) || {\r\n    id,\r\n    comments: [],\r\n  };\r\n\r\n  const setNewComments = (text: string) => {\r\n    const newComment = {\r\n      id: id,\r\n      comments: [\r\n        ...currentMovieComments.comments,\r\n        {\r\n          id: Math.floor(Math.random() * 1000),\r\n          text,\r\n          date: new Date().toJSON().slice(0, 10).replace(/-/g, '/'),\r\n        },\r\n      ],\r\n    };\r\n    const newCommentsList = commentsList.filter((c: any) => c.id != id);\r\n    setCommentsList([...newCommentsList, newComment]);\r\n    localStorage.setItem(\r\n      'comments',\r\n      JSON.stringify([...newCommentsList, newComment])\r\n    );\r\n    setValue('');\r\n  };\r\n\r\n  const deleteComment = (commentId: any) => {\r\n    const newCommentsList = commentsList.filter((c: any) => c.id != id);\r\n    let comList = newCommentsList ? newCommentsList : { id: id, comments: [] };\r\n    const newCurrentCommentList = currentMovieComments.comments.filter(\r\n      (c: any) => c.id != commentId\r\n    );\r\n\r\n    setCommentsList([...comList, { id, comments: newCurrentCommentList }]);\r\n    localStorage.setItem(\r\n      'comments',\r\n      JSON.stringify([...comList, { id, comments: newCurrentCommentList }])\r\n    );\r\n  };\r\n\r\n  const inputHandler = (e: any) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"comments\">\r\n      <div className=\"webflow-style-input\">\r\n        <input onChange={inputHandler} type=\"text\" />\r\n        <button\r\n          className=\"send-comment-button\"\r\n          onClick={() => setNewComments(value)}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n\r\n      {currentMovieComments\r\n        ? currentMovieComments.comments.map((comment: any) => {\r\n            return (\r\n              <div className={'comment'} key={comment + Math.random()}>\r\n                <div className=\"comment-header\">\r\n                  <div> {comment.date} </div>\r\n                  <div\r\n                    onClick={() => deleteComment(comment.id)}\r\n                    className=\"close-span\"\r\n                  >\r\n                    X\r\n                  </div>{' '}\r\n                </div>\r\n                comment #{comment.id}\r\n                <div>{comment.text}</div>\r\n              </div>\r\n            );\r\n          })\r\n        : 'No comments'}\r\n    </div>\r\n  );\r\n};\r\n","import { Link, useLocation } from 'react-router-dom';\r\nimport { CurretMovieSuggestionsType } from '../type';\r\nimport s from './MovieDetails.module.css';\r\n\r\ntype MovieSuggestionsType = {\r\n  movieSuggestions: CurretMovieSuggestionsType[];\r\n};\r\n\r\nexport const MovieSuggestions: React.FC<MovieSuggestionsType> = ({\r\n  movieSuggestions,\r\n}) => {\r\n  return (\r\n    <div className={s.movieSuggestions}>\r\n      {movieSuggestions.map((m: CurretMovieSuggestionsType) => {\r\n        return (\r\n          <MovieSuggestionsCard\r\n            key={m.id}\r\n            title={m.title}\r\n            medium_cover_image={m.medium_cover_image}\r\n            id={m.id}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MovieSuggestionsCard: React.FC<CurretMovieSuggestionsType> = ({\r\n  title,\r\n  medium_cover_image,\r\n  id,\r\n}) => {\r\n  console.log(useLocation().pathname.split('/'));\r\n  return (\r\n    <div className={s.movieSuggestionsCard}>\r\n      <Link to={`/movie/${id}`}>\r\n        <img src={medium_cover_image} alt=\"\" />\r\n        <div>{title}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getMoviesDetails } from '../redux/reducer';\r\nimport { MovieData, RootReducer } from '../type';\r\nimport Img from './Img';\r\nimport preloader from '../assets/empty.png';\r\nimport s from './MovieDetails.module.css';\r\nimport { Comments } from './Comments';\r\nimport { MovieSuggestions } from './MovieSuggestions';\r\n\r\nconst MovieDetailsData = (props: any) => {\r\n  let movieId = props.match.params.id;\r\n  const dispatch = useDispatch();\r\n  const movie = useSelector(\r\n    (state: RootReducer) => state.reducer.curretMovieDetails\r\n  );\r\n\r\n  const movieSuggestions = useSelector(\r\n    (state: RootReducer) => state.reducer.curretMovieSuggestions\r\n  );\r\n  console.log(movieSuggestions);\r\n  useEffect(() => {\r\n    dispatch(getMoviesDetails(movieId));\r\n  }, [movieId]);\r\n\r\n  const {\r\n    background_image,\r\n    date_uploaded,\r\n    description_full,\r\n    download_count,\r\n    genres,\r\n    large_cover_image,\r\n    rating,\r\n    runtime,\r\n    title,\r\n    year,\r\n  }: MovieData = movie;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={s.wrapper}\r\n        style={{ backgroundImage: `url(${background_image})` }}\r\n      >\r\n        <div className={s.container}>\r\n          <div className={s.img}>\r\n            <Img img={large_cover_image} preloader={preloader} />\r\n          </div>\r\n          <div className={s.movieInfo}>\r\n            <div className={s.title}>{title}</div>\r\n            <div>{year}</div>\r\n            <div className={s.genresWrapper}>\r\n              {genres\r\n                ? genres.map((genre: string) => (\r\n                    <span key={genre}>{genre}/</span>\r\n                  ))\r\n                : ''}\r\n            </div>\r\n            <div className={s.rating}>\r\n              <img\r\n                src=\"https://yts.mx/assets/images/website/logo-imdb.svg\"\r\n                alt=\"imdb\"\r\n              />\r\n              <span>&#9733; {rating}</span>\r\n            </div>\r\n          </div>\r\n          <MovieSuggestions movieSuggestions={movieSuggestions} />\r\n        </div>\r\n      </div>\r\n      <div className={s.synopsis}>\r\n        <h3>Synopsis</h3>\r\n        <span>{description_full}</span>\r\n        <div className={s.movieTechData}>\r\n          <div>Download count: {download_count}</div>\r\n          <div>Runtime: {runtime}</div>\r\n          <div>Uploaded date: {date_uploaded}</div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Comments id={movieId} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const MovieDetails = withRouter(MovieDetailsData);\r\n","import './App.css';\nimport { Link, Route } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { MoviesList } from './components/MoviesList';\nimport { Pagination } from './components/Pagination';\nimport { MovieDetails } from './components/MovieDetails';\n\nfunction App(props: any) {\n  return (\n    <div className=\"App\">\n      <div className=\"head\">\n        <Link className=\"header-link\" to=\"/\">\n          Movies\n        </Link>\n      </div>\n\n      <Route exact path=\"/\" component={Main} />\n      <Route exact path=\"/Movies-yts-react-redux\" component={Main} />\n\n      <Route\n        exact\n        path=\"/movie/:id?\"\n        component={() => <MovieDetails {...props} />}\n      />\n    </div>\n  );\n}\n\nconst Main = () => (\n  <>\n    <Header />\n    <MoviesList />\n    <Pagination />\n  </>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport reducer from './reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MovieDetails_wrapper__3Rz4h\",\"container\":\"MovieDetails_container__2drJg\",\"img\":\"MovieDetails_img__3TkMj\",\"movieInfo\":\"MovieDetails_movieInfo__9UUjZ\",\"title\":\"MovieDetails_title__3-mTs\",\"rating\":\"MovieDetails_rating__3To5o\",\"movieSuggestions\":\"MovieDetails_movieSuggestions__rWASM\",\"movieSuggestionsCard\":\"MovieDetails_movieSuggestionsCard__1qlKt\",\"synopsis\":\"MovieDetails_synopsis__NVqz5\",\"movieTechData\":\"MovieDetails_movieTechData__3gE48\",\"genresWrapper\":\"MovieDetails_genresWrapper__ReDrJ\"};"],"sourceRoot":""}